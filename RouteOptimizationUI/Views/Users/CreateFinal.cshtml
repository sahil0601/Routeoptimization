@model RouteOptimization.Infrastructure.Data.ViewModel.UserViewModel


<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.js" type="text/javascript"></script>
<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js" type="text/javascript"></script>
<script src="../../Scripts/jquery-1.5.1.min.js" type="text/javascript"></script>

<script type="text/javascript">

    $(document).ready(function () {
        $("#edt").click(function () {
            $.ajax({
                type: 'POST',
                url: '@Url.Action("Edit","Users")',
                data: $('#userform').serialize(),
                success: function (data) {
                    var val = 1;
                    $.ajax({
                        url: "/Users/Partial",
                        type: "GET",
                        data: { i: ((val * 1) + 1) }
                    })
                    .done(function (partialViewResult) {
                        $("#userDetail").html(partialViewResult);
                    });
                    alert("Details Updated.");
                    //   $('#userform').trigger("reset");
                    $('#resetform').click();
                },
                error: function (msg) {
                    alert("error");
                    alert(msg);
                }
            });
            return false;
        })
    });
</script>

<script type="text/javascript">

    $(document).ready(function () {
        $("#rst").click(function () {
            $.ajax({
                type: 'POST',
                url: '@Url.Action("ResetPassword","Users")',
                data: $('#userform').serialize(),
                success: function (data) {

                    alert("Password Reset");
                    //   $('#userform').trigger("reset");
                    $('#resetform').click();
                }
            });
            return false;
        })
    });
</script>



<script type="text/javascript">
    $(document).ready(function () {
        $("#sub").click(function () {
            $.ajax({
                type: 'POST',
                url: '@Url.Action("Create","Users")',
                data: $('#userform').serialize(),
                success: function (data) {
                    var val = 1;
                    $.ajax({
                        url: "/Users/Partial",
                        type: "GET",
                        data: { i: ((val * 1) + 1) }
                    })
                    .done(function (partialViewResult) {
                        $("#userDetail").html(partialViewResult);
                    });
                    alert("User Created.");
                },
                error: function (msg) {
                 //   alert("error");
                    alert(msg);
                }
            });
            return false;
        })
    });

</script>

<script type="text/javascript">
    $(document).ready(function () {
        //Dropdownlist Selectedchange event
        $("#Country").change(function () {
            $("#State").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetStates","Users")', // we are calling json method
                dataType: 'json',
                data: { Country: $("#Country").val() },
                // here we are get value of selected country and passing same value
                //  as inputto json method GetStates.
                success: function (states) {
                    // states contains the JSON formatted list
                    // of states passed from the controller
                    $("#city").empty();
                    $("#city").append('<option value="' + 0 + '">' +
                         "Please Select City" + '</option>');
                    $("#State").append('<option value="' + 0 + '">' +
                             "Please Select Province" + '</option>');
                    $.each(states, function (i, state) {
                        $("#State").append('<option value="' + state.Value + '">' +
                             state.Text + '</option>');
                        // here we are adding option for States
                        //    alert(state.Value+" -FULL- "+state.val + " - VAL - Text - " + state.Text);
                    });
                },
                error: function (ex) {
                    alert('Failed to retrieve states.' + ex);
                }
            });
            return false;
        })
    });
</script>

<script type="text/javascript">
    $(document).ready(function () {
        //Dropdownlist Selectedchange event
        $("#State").change(function () {
            $("#city").empty();
            $.ajax({

                type: 'POST',
                url: '@Url.Action("GetCity","Users")',
                dataType: 'json',
                data: { state: $("#State").val() },
                success: function (citys) {
                    // states contains the JSON formatted list
                    // of states passed from the controller
                    $("#city").append('<option value="' + 0 + '">' +
                          "Please Select City" + '</option>');
                    $.each(citys, function (i, city) {
                        $("#city").append('<option value="'
                + city.Value + '">'
                + city.Text + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed to retrieve states.' + ex);
                }
            });
            return false;
        })
    });
</script>



@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/jqueryval")
<div id="dvFormUser">

    <section id="widget-grid">

        <div class="row">
            <article class="col-sm-12 col-md-12 col-lg-12">
                <div class="jarviswidget" id="wid-id-0" data-widget-deletebutton="false" data-widget-editbutton="false" data-widget-colorbutton="false">
                    <header role="heading">
                        <span class="widget-icon"><i class="fa fa-edit"></i></span>
                        <h2>New User:</h2>
                    </header>
                    <div>
                        <div id="userdeail" class="widget-body no-padding">

                            @using (Html.BeginForm(null, null, FormMethod.Post, new { @class = "smart-form", id = "userform" }))
                            {

                                <fieldset>
                                    @Html.AntiForgeryToken()


                                    @Html.ValidationSummary(true)
                                    @Html.HiddenFor(model => model.UserId)
                                    @Html.HiddenFor(model => model.AddressID)


                                    <div class="row">
                                        <section class="col col-6">
                                            <label class="input">

                                                @if (@ViewBag.ac == "Edit")
                                                {
                                                    @Html.DropDownList("UserTypeID", (IEnumerable<SelectListItem>)ViewBag.UserTypeID, new { id = "UserTypeID", name = "UserTypeID", @class = "form-control" })

                                                    @*@Html.DropDownList("UserTypeID", String.Empty)*@
                                                    @Html.ValidationMessageFor(model => model.UserTypeId)                    }
                                                else
                                                {
                                                    @Html.DropDownListFor(model => model.UserTypeId,
          new SelectList(Model.UserTypeDetails, "UserTypeID", "Description"), "-Please select UserType-", new { @class = "form-control" })
                                                    @Html.ValidationMessageFor(model => model.UserTypeDetails)                    }


                                            </label>
                                        </section>

                                        <section class="col col-6">
                                            <label class="input">
                                                <i class="icon-append fa fa-briefcase"></i>
                                                @Html.TextBoxFor(model => model.FirstName, new { @placeholder = "First Name" })
                                                @Html.ValidationMessageFor(model => model.FirstName)
                                            </label>
                                        </section>
                                    </div>

                                    <div class="row">
                                        <section class="col col-6">
                                            <label class="input">
                                                <i class="icon-append fa fa-user"></i>
                                                @Html.TextBoxFor(model => model.LastName, new { @placeholder = "Last Name" })
                                                @Html.ValidationMessageFor(model => model.LastName)
                                            </label>
                                        </section>

                                        <section class="col col-6">
                                            <label class="input">
                                                <i class="icon-append fa fa-user"></i>
                                                @Html.TextBoxFor(model => model.EmailID, new { @placeholder = "Email ID" })
                                                @Html.ValidationMessageFor(model => model.EmailID)
                                            </label>
                                        </section>
                                    </div>


                                    <div class="row">
                                        <section class="col col-6">
                                            <label class="input">
                                                <i class="icon-append fa fa-user"></i>
                                                @Html.TextBoxFor(model => model.Phone, new { @placeholder = "Phone Number" })
                                                @Html.ValidationMessageFor(model => model.Phone)
                                            </label>
                                        </section>


                                        <section class="col col-6">
                                            <label class="input">
                                                <i class="icon-append fa fa-user"></i>
                                                @Html.TextBoxFor(model => model.Address1, new { @placeholder = "Address1" })
                                                @Html.ValidationMessageFor(model => model.Address1)
                                            </label>
                                        </section>
                                    </div>

                                    <div class="row">
                                        <section class="col col-6">
                                            <label class="input">
                                                <i class="icon-append fa fa-user"></i>
                                                @Html.TextBoxFor(model => model.Address2, new { @placeholder = "Address2" })
                                                @Html.ValidationMessageFor(model => model.Address2)
                                            </label>
                                        </section>

                                        <section class="col col-6">
                                            <label class="input">
                                                <i class="icon-append fa fa-user"></i>
                                                @Html.TextBoxFor(model => model.PostalCode, new { @placeholder = "Postal Code" })
                                                @Html.ValidationMessageFor(model => model.PostalCode)
                                            </label>
                                        </section>
                                    </div>

                                    <div class="row">
                                        <section class="col col-6">
                                            <label class="input">

                                                @if (@ViewBag.ac == "Edit")
                                                {
                                                    @Html.DropDownList("CountryId", (IEnumerable<SelectListItem>)ViewBag.CountryId, new { id = "CountryId", name = "CountryId", @class = "form-control" })

                                                    @*@Html.DropDownList("CountryId", String.Empty)*@
                                                    @Html.ValidationMessageFor(model => model.CountryId)                    }
                                                else
                                                {

                                                    @Html.DropDownListFor(model => model.CountryId,
                                           new SelectList(Model.CountryDetails, "CountryId", "Name"), "-Please select a country-", new { @id = "Country", @class = "form-control" })
                                                }

                                            </label>
                                        </section>
                                        <section class="col col-6">
                                            <label class="input">

                                                @if (@ViewBag.ac == "Edit")
                                                {
                                                    @Html.DropDownList("ProvinceId", (IEnumerable<SelectListItem>)ViewBag.ProvinceId, new { id = "ProvinceId", name = "ProvinceId", @class = "form-control" })

                                                    @*@Html.DropDownList("ProvinceId", String.Empty)*@
                                                    @Html.ValidationMessageFor(model => model.ProvinceId)
                                                }
                                                else
                                                {
                                                    @Html.DropDownListFor(model => model.ProvinceId,
                                          new SelectList(string.Empty, "Value", "Text"), "-Please select a Province-", new { @id = "State", @class = "form-control" })
                                                }
                                            </label>
                                        </section>
                                    </div>

                                    <div class="row">
                                        <section class="col col-6">
                                            <label class="input">

                                                @if (@ViewBag.ac == "Edit")
                                                {
                                                    @Html.DropDownList("CityId", (IEnumerable<SelectListItem>)ViewBag.CityID, new { id = "CityId", name = "CityId", @class = "form-control" })

                                                    @*@Html.DropDownList("CityId",String.Empty)*@
                                                    @Html.ValidationMessageFor(model => model.CityId)
                                                }
                                                else
                                                {
                                                    @Html.DropDownListFor(model => model.CityId,
                                     new SelectList(string.Empty, "Value", "Text"), "-Please select a City-", new { @id = "city", @class = "form-control" })
                                                }

                                            </label>
                                        </section>
                                    </div>

                                </fieldset>

                                <footer>
                                    <input type="reset" id='resetform' value='reset' hidden="hidden" />

                                    @if (ViewBag.ac == "Edit")
                                    {
                                        <input type="submit" value="Edit" id="edt" class="btn btn-primary" formaction="Edit" />
                                        <input type="submit" value="Reset Password" id="rst" class="btn btn-primary" formaction="ResetPassword" />
                                    }
                                    else
                                    {
                                        <input type="submit" value="Create" id="sub" class="btn btn-primary" />
                                    }
                                </footer>
                            }

                        </div>
                    </div>
                </div>
            </article>
        </div>
    </section>
</div>


<div class="row">

    <article class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
        <div class="jarviswidget jarviswidget-color-darken" id="wid-id-0" data-widget-editbutton="false">

            <header>
                <span class="widget-icon"> <i class="fa fa-table"></i> </span>
                <h2>User List:</h2>
            </header>
            <div>
                <div class="jarviswidget-editbox">
                </div>

                <div class="widget-body no-padding">
                    <div id="dvStoreList">
                        @Html.Partial("PartialList", Model.GetUserViewModel())

                    </div>
                </div>

            </div>
        </div>
    </article>
</div>


