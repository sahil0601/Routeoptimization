@model RouteOptimization.Infrastructure.StoreViewModel
<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.js" type="text/javascript"></script>
<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js" type="text/javascript"></script>
<script src="../../Scripts/jquery-1.5.1.min.js" type="text/javascript"></script>

<script type="text/javascript">
    $(document).ready(function () {
        //Dropdownlist Selectedchange event
        $("#Country").change(function () {
            $("#State").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetStates","Users")', // we are calling json method
                dataType: 'json',
                data: { Country: $("#Country").val() },
                // here we are get value of selected country and passing same value
                //  as inputto json method GetStates.
                success: function (states) {
                    // states contains the JSON formatted list
                    // of states passed from the controller
                    $("#city").empty();
                    $("#city").append('<option value="' + 0 + '">' +
                         "Please Select City" + '</option>');
                    $("#State").append('<option value="' + 0 + '">' +
                             "Please Select State" + '</option>');
                    $.each(states, function (i, state) {
                        $("#State").append('<option value="' + state.Value + '">' +
                             state.Text + '</option>');
                        // here we are adding option for States
                        //    alert(state.Value+" -FULL- "+state.val + " - VAL - Text - " + state.Text);
                    });
                },
                error: function (ex) {
                    alert('Failed to retrieve states.' + ex);
                }
            });
            return false;
        })
    });
</script>

<script type="text/javascript">
    $(document).ready(function () {
        //Dropdownlist Selectedchange event
        $("#State").change(function () {
            $("#city").empty();
            $.ajax({

                type: 'POST',
                url: '@Url.Action("GetCity","Users")',
                dataType: 'json',
                data: { state: $("#State").val() },
                success: function (citys) {
                    // states contains the JSON formatted list
                    // of states passed from the controller
                    $("#city").append('<option value="' + 0 + '">' +
                          "Please Select City" + '</option>');
                    $.each(citys, function (i, city) {
                        $("#city").append('<option value="'
                + city.Value + '">'
                + city.Text + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed to retrieve states.' + ex);
                }
            });
            return false;
        })
    });
</script>


                  
                        <form name="storeForm" id="storeForm" method="post" class=" smart-form">

                            <fieldset>
                                @Html.AntiForgeryToken()
                                @Html.HiddenFor(model => model.Store.StoreID, new { id = "ID" })
                                @Html.ValidationSummary(true)

                                <div class="row">
                                    <section class="col col-6">
                                        <label class="input">
                                            <i class="icon-append fa fa-user"></i>
                                            @*<input type="text" id="txt" />*@
                                            @Html.TextBoxFor(model => model.Store.Name, new { name = "Name", id = "Name", @placeholder = "Store Name" })
                                            @Html.ValidationMessageFor(model => model.Store.Name)
                                        </label>

                                    </section>
                                    <section class="col col-6">
                                        <label class="input">
                                            <i class="icon-append fa fa-briefcase"></i>
                                            @Html.TextBoxFor(model => model.Store.StoreNumber, new { id = "storeNumber", name = "storeNumber", @placeholder = "Store Number" })
                                            @Html.ValidationMessageFor(model => model.Store.StoreNumber)
                                        </label>
                                    </section>
                                </div>

                                <div class="row">
                                    <section class="col col-6">
                                        <label class="input">
                                            @Html.DropDownList("RetailerID", (IEnumerable<SelectListItem>)ViewBag.RetailerID,"-Please select Retailer-", new { id = "retailerID", name = "retailerID", @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.Store.RetailerID)

                                        </label>
                                    </section>
                                    <section class="col col-6">
                                        <label class="input">
                                            <i class="icon-append fa fa-envelope-o"></i>
                                            @Html.TextBoxFor(model => model.Store.EmailID, new { id = "emailID", name = "emailID", @placeholder = "EmailID" })
                                            @Html.ValidationMessageFor(model => model.Store.EmailID)
                                        </label>
                                    </section>
                                </div>
                                <div class="row">
                                    <section class="col col-6">
                                        <label class="input">
                                            <i class="icon-append fa fa-phone"></i>
                                            @Html.TextBoxFor(model => model.Store.Phone, new { id = "phone", name = "phone", @placeholder = "Phone Number" })
                                            @Html.ValidationMessageFor(model => model.Store.Phone)
                                        </label>
                                    </section>
                                    <section class="col col-6">
                                        <label class="input">
                                            <i class="icon-append fa fa-briefcase"></i>
                                            @Html.TextBoxFor(model => model.Address1, new { id = "Address1", name = "Address1",@placeholder = "Address1" })
                                            @Html.ValidationMessageFor(model => model.Address1)
                                        </label>
                                    </section>
                                    @*<section class="col col-6">
                    <label class="input">
                        @Html.DropDownList("AddressID", (IEnumerable<SelectListItem>)ViewBag.AddressID, new {id="addressID", name="addressID",  @class = "form-control" })                                            @Html.ValidationMessageFor(model => model.Store.AddressID)
                        @Html.ValidationMessageFor(model => model.Store.AddressID)
                     </label>
                </section>*@
                                </div>


                                
                                @*</div>
            </div>*@

                                @*<div class="form-group">
            @Html.LabelFor(model => model.Address2, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">*@
                                <div class="row">
                                    <section class="col col-6">
                                        <label class="input">
                                            <i class="icon-append fa fa-briefcase"></i>
                                            @Html.TextBoxFor(model => model.Address2, new { id = "Address2", @class = "text-label", @placeholder = "Address2" })
                                            @Html.ValidationMessageFor(model => model.Address2)
                                        </label>
                                    </section>
                                    <section class="col col-6">
                                        <label class="input">
                                            <i class="icon-append fa fa-briefcase"></i>
                                            @Html.TextBoxFor(model => model.PostalCode, new { id = "Postal", @class = "text-label", @placeholder = "Postal Code" })
                                            @Html.ValidationMessageFor(model => model.PostalCode)
                                        </label>
                                    </section>
                                </div>
                                @*</div>
            </div>*@

                                @*<div class="form-group">
            @Html.LabelFor(model => model.PostalCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">*@
                             
                                @*</div>
            </div>*@
                                @*<div class="form-group">
            @Html.LabelFor(model => model.CountryDetails, "CountryId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">*@
                                <div class="row">
                                    <section class="col col-6">
                                        <label class="input">
                                            @if (@ViewBag.ac == "Edit")
                                            {
                                                @Html.DropDownList("Country", (IEnumerable<SelectListItem>)ViewBag.CountryID, new { id = "Country", name = "Country", @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.CountryId)
                                            }
                                            else
                                            {
                                                @Html.DropDownListFor(model => model.CountryId,
                                           new SelectList(Model.CountryDetails, "CountryId", "Name"), "-Please select a country-", new { id = "Country", @class = "form-control" })
                                            }

                                            @*@Html.DropDownList("Country", new SelectList(Model.CountryDetails, "CountryId", "Name"), "Please select a Country", new { style = "width:250px", @class = "dropdown1" })*@
                                            @*</div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.ProvinceDetails, "ProvinceId", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">*@
                                        </label>
                                    </section>
                                    <section class="col col-6">
                                        <label class="input">
                                          
                                            @if (@ViewBag.ac == "Edit")
                                            {
                                                @Html.DropDownList("State", (IEnumerable<SelectListItem>)ViewBag.ProvinceID, new { id = "State", name = "State", @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.ProvinceId)
                                            }
                                            else
                                            {
                                                @Html.DropDownListFor(model => model.ProvinceId,
                                          new SelectList(string.Empty, "Value", "Text"), "-Please select a Province-", new { id = "State", @class = "form-control" })
                                            }

                                            @*@Html.DropDownList("State", new SelectList(string.Empty, "Value", "Text"), "Please select a State", new { style = "width:250px", @class = "dropdown1" })*@
                                            @*</div>
                </div>*@
                                        </label>
                                    </section>

                                </div>

                              
                                @*<div class="form-group">
                            @Html.LabelFor(model => model.CountryDetails, "CountryId", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownListFor(model => model.CountryId,
            new SelectList(Model.CountryDetails, "CountryId", "Name"), "-Please select a country-")

                                @Html.ValidationMessageFor(model => model.CountryDetails)
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.ProvinceDetails, "ProvinceId", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownListFor(model => model.ProvinceId,
            new SelectList(Model.ProvinceDetails, "ProvinceId", "Name"), "-Please select a Province-")

                                @Html.ValidationMessageFor(model => model.ProvinceDetails)
                            </div>
                       </div>*@
                                @*<div class="form-group">
            @Html.LabelFor(model => model.CityDetails, "CityId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">*@

                                <div class="row">
                                    <section class="col col-6">
                                        <label class="input">
                                            @if (@ViewBag.ac == "Edit")
                                            {
                                                @Html.DropDownList("city", (IEnumerable<SelectListItem>)ViewBag.CityID, new { id = "city", name = "city", @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.CityId)
                                            }
                                            else
                                            {
                                                @Html.DropDownListFor(model => model.CityId,
                                new SelectList(string.Empty, "Value", "Text"), "-Please select a City-", new { id = "city",  @class = "form-control" })
                                            }
                                            @*@Html.DropDownList("city", new SelectList(string.Empty, "Value", "Text"), "Please select a city", new { style = "width:250px", @class = "dropdown1" })*@
                                            @*</div>
                        </div>*@
                                        </label>
                                    </section>
                                    </div>
                            </fieldset>

                            <footer>
                                <button type="submit" id="save" class="btn btn-primary" onclick="EditStoreList()">
                                    Save
                                </button>
                            </footer>
                        </form>
                    
       